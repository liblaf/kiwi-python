{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"HOME","text":""},{"location":"#kiwi","title":"Kiwi","text":"<p>TODO: DESCRIPTION  Explore the docs \u00bb</p> <p> </p> <p>Changelog \u00b7 Report Bug \u00b7 Request Feature</p> <p></p>"},{"location":"#features","title":"\u2728 Features","text":"<ul> <li>[x] \u2728 TODO: FEATURES;</li> </ul>"},{"location":"#installation","title":"\ud83d\udce6 Installation","text":"<p>To install <code>liblaf-kiwi</code>, run the following command:</p> <pre><code>$ uv add liblaf-kiwi\n</code></pre> <p></p>"},{"location":"#local-development","title":"\u2328\ufe0f Local Development","text":"<p>You can use Github Codespaces for online development:</p> <p></p> <p>Or clone it for local development:</p> <pre><code>$ gh repo clone liblaf/kiwi-python\n$ cd kiwi-python\n$ just test\n</code></pre> <p></p>"},{"location":"#contributing","title":"\ud83e\udd1d Contributing","text":"<p>Contributions of all types are more than welcome, if you are interested in contributing code, feel free to check out our GitHub Issues to get stuck in to show us what you're made of.</p> <p></p> <p></p> <p></p>"},{"location":"#links","title":"\ud83d\udd17 Links","text":""},{"location":"#more-projects","title":"More Projects","text":"<ul> <li>\ud83c\udf47 Grapes - Powerful Python utilities for logging, timing, and more, making development smoother!</li> </ul>"},{"location":"#credits","title":"Credits","text":"<ul> <li>Python - https://www.python.org/</li> </ul>"},{"location":"#license","title":"\ud83d\udcdd License","text":"<p>Copyright \u00a9 2025 liblaf.  This project is MIT licensed.</p>"},{"location":"SUMMARY/","title":"SUMMARY","text":"<ul> <li>HOME</li> <li>API Reference</li> </ul>"},{"location":"api/SUMMARY/","title":"SUMMARY","text":"<ul> <li>liblaf     * liblaf.kiwi         * liblaf.kiwi.app             * liblaf.kiwi.app.ufw_geomap         * liblaf.kiwi.utils</li> </ul>"},{"location":"api/liblaf/kiwi/","title":"liblaf.kiwi","text":"<p>Modules:</p> <ul> <li> <code>app</code>           \u2013            </li> <li> <code>utils</code>           \u2013            </li> </ul> <p>Functions:</p> <ul> <li> <code>main</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>__version__</code>               (<code>str</code>)           \u2013            </li> <li> <code>__version_tuple__</code>               (<code>tuple[int | str, ...]</code>)           \u2013            </li> <li> <code>dirs</code>           \u2013            </li> <li> <code>iter_data_paths</code>               (<code>Callable[[], Iterable[Path]]</code>)           \u2013            </li> <li> <code>version</code>               (<code>str</code>)           \u2013            </li> <li> <code>version_tuple</code>               (<code>tuple[int | str, ...]</code>)           \u2013            </li> </ul>"},{"location":"api/liblaf/kiwi/#liblaf.kiwi.__version__","title":"__version__  <code>module-attribute</code>","text":"<pre><code>__version__: str = '0.1.1'\n</code></pre>"},{"location":"api/liblaf/kiwi/#liblaf.kiwi.__version_tuple__","title":"__version_tuple__  <code>module-attribute</code>","text":"<pre><code>__version_tuple__: tuple[int | str, ...] = (0, 1, 1)\n</code></pre>"},{"location":"api/liblaf/kiwi/#liblaf.kiwi.dirs","title":"dirs  <code>module-attribute</code>","text":"<pre><code>dirs = AppDirs(appname='liblaf/kiwi', appauthor='liblaf')\n</code></pre>"},{"location":"api/liblaf/kiwi/#liblaf.kiwi.iter_data_paths","title":"iter_data_paths  <code>module-attribute</code>","text":"<pre><code>iter_data_paths: Callable[[], Iterable[Path]] = (\n    iter_data_paths\n)\n</code></pre>"},{"location":"api/liblaf/kiwi/#liblaf.kiwi.version","title":"version  <code>module-attribute</code>","text":"<pre><code>version: str = '0.1.1'\n</code></pre>"},{"location":"api/liblaf/kiwi/#liblaf.kiwi.version_tuple","title":"version_tuple  <code>module-attribute</code>","text":"<pre><code>version_tuple: tuple[int | str, ...] = (0, 1, 1)\n</code></pre>"},{"location":"api/liblaf/kiwi/#liblaf.kiwi.main","title":"main","text":"<pre><code>main() -&gt; None\n</code></pre> Source code in <code>src/liblaf/kiwi/app/_app.py</code> <pre><code>def main() -&gt; None:\n    status: int | None = app.meta()\n    if status is not None:\n        sys.exit(status)\n</code></pre>"},{"location":"api/liblaf/kiwi/app/","title":"liblaf.kiwi.app","text":"<p>Modules:</p> <ul> <li> <code>ufw_geomap</code>           \u2013            </li> </ul> <p>Functions:</p> <ul> <li> <code>main</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>app</code>           \u2013            </li> </ul>"},{"location":"api/liblaf/kiwi/app/#liblaf.kiwi.app.app","title":"app  <code>module-attribute</code>","text":"<pre><code>app = App(name='kiwi', version=__version__)\n</code></pre>"},{"location":"api/liblaf/kiwi/app/#liblaf.kiwi.app.main","title":"main","text":"<pre><code>main() -&gt; None\n</code></pre> Source code in <code>src/liblaf/kiwi/app/_app.py</code> <pre><code>def main() -&gt; None:\n    status: int | None = app.meta()\n    if status is not None:\n        sys.exit(status)\n</code></pre>"},{"location":"api/liblaf/kiwi/app/ufw_geomap/","title":"liblaf.kiwi.app.ufw_geomap","text":"<p>Functions:</p> <ul> <li> <code>ufw_geomap</code>             \u2013              </li> </ul>"},{"location":"api/liblaf/kiwi/app/ufw_geomap/#liblaf.kiwi.app.ufw_geomap.ufw_geomap","title":"ufw_geomap","text":"<pre><code>ufw_geomap(\n    *log_files: Annotated[ResolvedExistingFile, Argument()],\n    geoip: Annotated[\n        ResolvedExistingFile, Parameter()\n    ] = expanduser(),\n    output_csv: Annotated[\n        ResolvedFile | None, Parameter()\n    ] = None,\n    output_html: Annotated[\n        ResolvedFile | None, Parameter()\n    ] = None,\n    output_jsonl: Annotated[\n        ResolvedFile | None, Parameter()\n    ] = None,\n) -&gt; None\n</code></pre> Source code in <code>src/liblaf/kiwi/app/ufw_geomap/_app.py</code> <pre><code>def ufw_geomap(\n    *log_files: Annotated[cyclopts.types.ResolvedExistingFile, cyclopts.Argument()],\n    geoip: Annotated[cyclopts.types.ResolvedExistingFile, cyclopts.Parameter()] = Path(  # noqa: B008\n        \"~/.local/share/geoip/GeoLite2-City.mmdb\"\n    ).expanduser(),\n    output_csv: Annotated[\n        cyclopts.types.ResolvedFile | None, cyclopts.Parameter()\n    ] = None,\n    output_html: Annotated[\n        cyclopts.types.ResolvedFile | None, cyclopts.Parameter()\n    ] = None,\n    output_jsonl: Annotated[\n        cyclopts.types.ResolvedFile | None, cyclopts.Parameter()\n    ] = None,\n) -&gt; None:\n    from ._impl import ufw_geomap_impl\n\n    ufw_geomap_impl(\n        *log_files,\n        geoip=geoip,\n        output_csv=output_csv,\n        output_html=output_html,\n        output_jsonl=output_jsonl,\n    )\n</code></pre>"},{"location":"api/liblaf/kiwi/utils/","title":"liblaf.kiwi.utils","text":"<p>Functions:</p> <ul> <li> <code>find_data_path</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>dirs</code>           \u2013            </li> <li> <code>iter_data_paths</code>               (<code>Callable[[], Iterable[Path]]</code>)           \u2013            </li> </ul>"},{"location":"api/liblaf/kiwi/utils/#liblaf.kiwi.utils.dirs","title":"dirs  <code>module-attribute</code>","text":"<pre><code>dirs = AppDirs(appname='liblaf/kiwi', appauthor='liblaf')\n</code></pre>"},{"location":"api/liblaf/kiwi/utils/#liblaf.kiwi.utils.iter_data_paths","title":"iter_data_paths  <code>module-attribute</code>","text":"<pre><code>iter_data_paths: Callable[[], Iterable[Path]] = (\n    iter_data_paths\n)\n</code></pre>"},{"location":"api/liblaf/kiwi/utils/#liblaf.kiwi.utils.find_data_path","title":"find_data_path","text":"<pre><code>find_data_path(filename: str) -&gt; Path | None\n</code></pre> Source code in <code>src/liblaf/kiwi/utils/_dirs.py</code> <pre><code>def find_data_path(filename: str) -&gt; Path | None:\n    for path in iter_data_paths():\n        candidate: Path = path / filename\n        if candidate.exists():\n            return candidate\n    return None\n</code></pre>"}]}